1) What is computation?
   Code that takes an input and produces an output, the process that the program does to work

2) What do we mean by inputs and outputs to a computation? Give examples
   The input is something such as a mouse click, something typed in on a keyboard or information from another source, there are basically infinite of these, an output is what the user sees in response to what the input was, such as text outputted, lights, information exported, again there are basically infinte different outputs

3) What three requirements should a programmer keep in mind when expressing computations?
   Functionality, does it work, there is no use of having a quick program that is very simple if it produces wrong or bad results
   Simplicity, make the code explicit and readable, otherwise it is difficult to work on
   Efficiency, running fast

4) What does an expression do?
   An expression is data that is used in the program

5) What is the difference between a statement and an expression?
   An expression is a literal piece of data whereas a statement is a piece of code that acts on that data

6) What is an lvalue? List the operators that that require an Ivalue. Why do these operators, and not the others require an Ivalue?
   An lvalue is a value that has a specific address or location in the memory, variables need lvalues to store their data, and so fo functions that return data, and objects that return data, they need these so that the data that they have can be stored somewhere otherwise the data would be lost.

7) What is a constant expression
   An expression that cannot change throughout the program

8) What is a literal?
   A piece of data that is 'raw', such as a number or charachter

9) What is a symbolic constant and why do we use them?
   A name given to a literal, such as pi, where constexpr should be used. These are used to create a simple and accurate way to write a longer or difficult to understand literal to a simpler name without being at risk of it being changed

10) What is a magic constant? Give examples
    A literal that doesnt have a name plonked into code, an example is area = 42 * 12 (magic constants, bad) compared to area = height*width (symbolic constant, good)

11) What are some operators that we can use for integers and floating point values?
    You can use comparison operators as these dont change the data, and you can use other operators if the result is a floating point or a double, otherwise the decimals are goign to be narrowed and lost

12) What operators can be used on integers but not floating point numbers?
    -

13) What are some operators thats can be used on strings?
    You can concatenate strings using + 

14) When would a programmer prefer the switch statement overif statement?
    When you are only checking literals (integers and chars) and when there is lots of tests, as switch is cleaner and more readable than if, but cant check vairables or strings

15) What are some common problems with the switch statement?
    See above

16) What is the function of each part of the header line in a for loop, and in what sequence are they executed?
    The first statement declares the variable that the loop will be using, generally i and what it will start from, generrally 0, this only runs once the first time it runs. The second part is how far it goes, or when the loop stops, this is made up of a comparison such as i < 100. The final part is how much that i is incramented by

17) When should the for loop be used and when should the while loop be used?
    The for loop should take priority for simple reucurring loops, as it is cleaner and overall better, but while loops should be used for more advanced conditions such as booleans

18) How do you describe the numeric value of char?
    Each char has a numeric value based on the ascii table 

19) Describe what the line char foo(int x)
    This takes an integer and returns a char

20) When should you define a seperate function for part of a program? List reasons
    When there is a repeatable thing that will happen at least several time in your code or in other programs that saves time writing out the entire thing

21) What can you do to an int that you cannot do to a string?
    You can multiply divide and subtract from ints, and you can also compare and itterate them

22) What can you do to a string that you cannot do to an int?
    Not too much that I can think off, but concatenating, adding the strings onto the end of each other

23) What is the index of the third element of a vector?
    2

24) How do you write a for loop that prints every elemtn of a vector
    for (int i = 0; i > vec.size(); i++)
    { 
    cout << vec[i] << "\n";
    }

25) What does vector<char>alphabet(26) do?
    Creates a vector with 26 strings called alphabet

26) Describe what push_back() does to a vector.
    It adds a new index to the vector with a value, and adds that to the end of the vector

27) What does vector's memeber size do?
    Sets the maximum size of elements that a vector can have

28) What makes vector so useful?
    They are a collection of elements that are easily accessable and easily sorted through











